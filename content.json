{"meta":{"title":"JantoK's blog","subtitle":"个人记录博客","description":"simple is the best.","author":"JantoK","url":"http://129.211.78.206","root":"/"},"pages":[{"title":"个人简介","date":"2020-07-04T02:10:24.941Z","updated":"2020-07-04T02:10:24.941Z","comments":false,"path":"about/index.html","permalink":"http://129.211.78.206/about/","excerpt":"","text":""},{"title":"分类","date":"2020-06-30T09:10:00.000Z","updated":"2020-07-02T05:37:46.962Z","comments":true,"path":"categories/index.html","permalink":"http://129.211.78.206/categories/","excerpt":"","text":""},{"title":"所有标签","date":"2020-06-30T09:11:40.000Z","updated":"2020-07-03T12:23:55.640Z","comments":true,"path":"tags/index.html","permalink":"http://129.211.78.206/tags/","excerpt":"","text":""}],"posts":[{"title":"Hexo网站博客搭建与基础配置","slug":"Hexo网站博客搭建与基础配置","date":"2020-07-04T09:46:26.000Z","updated":"2020-07-04T12:05:43.498Z","comments":true,"path":"2020/07/04/Hexo网站博客搭建与基础配置/","link":"","permalink":"http://129.211.78.206/2020/07/04/Hexo%E7%BD%91%E7%AB%99%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/","excerpt":"","text":"本篇会介绍如何使用Hexo框架快速搭建一个博客网站。 你必须具备以下知识储备： 对于环境配置以及命令行等操作熟悉 对于Github有初步的认识和了解 有自己查阅文档的能力 如果有以下知识储备，那就更好了： 会编写css样式 对前端项目有大致的了解 非常熟悉git命令行 项目安装配置 若以下相关配置您的环境已经配置了，可自行跳过。 命令行工具 linux与mac下自带的命令行环境已经足够便捷于开发，笔者使用的是mac环境。对于windows推荐，推荐安装Git Bash命令行工具 非常不推荐使用黑窗窗（也就是cmd）进行开发于运行。对于Git Bash的安装，推荐这个教程。 配置完成之后，输入以下命令行： 1git version 看到有输出为： git version x (y) 则表示配置完成。x表示版本号，y为其他附加信息。 NodeJs Hexo基于nodeJs环境所进行开发。 windows安装教程 输入以下命令，有版本号输出即安装完成： 12node -vnpm -v 安装Hexo 新建一个文件夹，用来存放博客的文件。 在命令行下进入到该文件夹页面。使用cd命令，或者windows用户可以在点击进入该文件夹的情况下，右键，然后点击 git base here表示在该文件夹路径下大概git命令行。 使用hexo命令进行安装： 1npm i -g hexo 等待命令跑完，且正常后，输入以下命令： 1hexo init 表示用hexo初始化创建该文件夹。之后该文件夹下会生成如下文件： node_modules：用来存放安装的依赖包，一般不需要管理。 public：存放hexo自动生成的页面文件。 scaffolds：用于生成文章的格式模板。 source：用于存放各种生成的文章（在该文件夹下使用markdown语法编写md文件后，hexo会自动生成对应的web页面） themes：用于存放主题文件夹。 _config.yml: （重要）在此对整个hexo项目进行配置。 db.json: source文件夹的解析文件，一般不需要管理。 package.json：项目所需的配置信息管理，一般不需要管理。 运行hexo首选，输入以下命令，对整个hexo项目进行清理。（每次改动后在运行之前，都需要进行清理，必须要养成这样习惯） 1hexo clean 然后，生成网页文件。其中g是generate的简写。 1hexo g 然后，运行hexo项目。s是service的简写。 1hexo s 接着你就会看到如下提示，则表示运行成功： INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 若看到如下页面: FATAL Port 4000 has been used. Try other port instead.FATAL Something’s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html 则表示项目端口已被占用。项目默认运行端口为4000，可以在配置文件中进行修改。若项目运行正常，则在游览器中复制打开显示的localhost网址，你就会看到如下页面：则表示运行成功。其中你所看到的是hexo的默认主题，后续可进行更改。这步操作中所用到的三条命令行clean，g，s是hexo的三部曲，要熟记，后面还有d-deploy表示发布。 至此，则hexo的基础搭建完成。","categories":[{"name":"专业","slug":"专业","permalink":"http://129.211.78.206/categories/%E4%B8%93%E4%B8%9A/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://129.211.78.206/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"专业","slug":"专业","permalink":"http://129.211.78.206/categories/%E4%B8%93%E4%B8%9A/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://129.211.78.206/tags/%E5%8D%9A%E5%AE%A2/"}]}